worker_processes auto;

error_log /var/log/nginx/error.log;
pid /var/run/nginx-fe.pid;
worker_rlimit_nofile 65532;

events {
    worker_connections 8192;
}

http {
    log_format access '$remote_addr - $remote_user [$time_local] '
    '"$request" $status $body_bytes_sent $request_time $upstream_response_time_new '
    '"$http_referer" "$http_user_agent"';

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    access_log /var/log/nginx/access.log access;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    keepalive_timeout 295;
    proxy_connect_timeout 120;

    # DDoS Protection Settings
    client_body_buffer_size 16;
    client_header_buffer_size 16k;
    large_client_header_buffers 4 64k;
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=250r/s;
    limit_req_zone $binary_remote_addr zone=xcdapi_limit:10m rate=1r/s;
    limit_req_status 429;

    gzip on;
    gzip_http_version 1.0;
    gzip_comp_level 2;
    gzip_proxied any;
    gzip_vary off;
    gzip_types text/plain text/css application/x-javascript text/xml application/xml application/rss+xml application/atom+xml text/javascript application/javascript application/json text/mathml;
    gzip_min_length 1000;
    gzip_disable "MSIE [1-6]\.";

    server_names_hash_bucket_size 64;
    types_hash_max_size 2048;
    types_hash_bucket_size 64;
    client_max_body_size 20M;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    map $upstream_response_time $upstream_response_time_new {
        default $upstream_response_time;
        "" -1;
    }

    include /etc/nginx/conf.d/*.conf;


    server {
        listen 80;
        keepalive_timeout 70;

        server_name _;
        rewrite_log on;
        proxy_set_header Connection "";

        # ssl_certificate /etc/nginx/conf.d/server.crt;
        # ssl_certificate_key /etc/nginx/conf.d/server.key;

        # ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        # ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:AES128-GCM-SHA256:AES128-SHA256:AES128-SHA:AES256-GCM-SHA384:AES256-SHA256:AES256-SHA:HIGH:!DH:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK:!RC4;
        # ssl_prefer_server_ciphers on;
        # ssl_session_cache shared:SSL:10m;
        # ssl_session_timeout 10m;
        access_log /var/log/nginx/ssl_nginx_access.log access;
        error_log /var/log/nginx/ssl_nginx_error.log;

        # DDoS Protection Settings
        client_max_body_size 2048M;
        limit_conn conn_limit_per_ip 300;
        limit_req zone=req_limit_per_ip burst=400 nodelay;

        server_tokens off;
        ignore_invalid_headers off;

        location / {
            proxy_pass http://localhost:7000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_cache_bypass $http_upgrade;
            access_log /var/log/nginx/ssl_xcd_access.log access;
        }

        location /experiences/ {
            rewrite ^/experiences/autodesk(.*)$ /$1 break;
            proxy_pass http://localhost:5004;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_cache_bypass $http_upgrade;
            access_log /var/log/nginx/ssl_discovery-catalog_access.log access;
        }

        location /rewards/ {
            rewrite ^/rewards/(.*)$ /$1 break;
            proxy_pass http://localhost:5002;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_cache_bypass $http_upgrade;
            access_log /var/log/nginx/ssl_discovery-feedback_access.log access;
        }

    }
}
